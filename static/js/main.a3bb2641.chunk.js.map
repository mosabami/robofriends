{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","map","user","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAeeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAEzB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,gCACI,6BAAKL,IACL,4BAAIC,WCcLK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIhB,OACI,8BAEQA,EAAOC,KAAI,SAACC,GACR,OACI,cAAC,EAAD,CACAP,GAAIO,EAAKP,GACTF,KAAMS,EAAKT,KACXC,MAAOQ,EAAKR,OAHCQ,EAAKP,UCI3BQ,EAhBG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAE9B,OACI,qBAAKT,UAAU,KAAf,SAEI,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,eACZC,SAAUH,OCDPI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,SACKJ,EAAMK,YCoBJC,E,kDArBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yDAEAG,KAAKX,MAAMK,a,GAhBFQ,aCiDbC,G,wDAzCX,aAAe,IAAD,8BACV,gBAMJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SANzC,EAAKX,MAAQ,CACTjB,OAAQ,GACRI,YAAa,IAJP,E,qDAYd,WAAqB,IAAD,OAChByB,MAAM,8CACLC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAACtB,OAAOiC,S,oBAI1C,WACI,MAA+BZ,KAAKJ,MAA5BjB,EAAR,EAAQA,OAAOI,EAAf,EAAeA,YACX8B,EAAiBlC,EAAOmC,QAAO,SAACC,GAChC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAQrC,EAAOuC,OAGX,sBAAK3C,UAAU,KAAf,UACI,8CACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAUkC,WAPpC,gD,GA1BUX,cCGHiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a3bb2641.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Card = ({ name, email, id }) => {\n    // const { name, email, id } = props\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robot\" />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\"\nimport Card from './Card'\n\nconst CardList = ({ robots }) => {\n    // if(true) {\n    //     throw new Error('nooooo!')\n    // }\n    return (\n        <div>\n            {\n                robots.map((user) => {\n                    return (\n                        <Card key = {user.id} \n                        id={user.id} \n                        name={user.name} \n                        email={user.email}/>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default CardList;\n","const SearchBox = ({ searchfield, searchChange }) => {\n    \n    return (\n        <div className='p2'>\n        \n            <input \n            className=\"pa3 ba b--green bg-lightest-blue\" \n            type=\"search\" \n            placeholder='search robot' \n            onChange={searchChange}\n            />\n        </div>\n        \n    )\n}\n\nexport default SearchBox","import React from \"react\"\nconst Scroll = (props) =>{\n    return (\n        <div style={{overflowY:'scroll',border:'1px solid black',height:'500px'}}>\n            {props.children}\n        </div>\n    )\n}\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error,info) {\n        this.setState({hasError:true});\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Oooops that is not good</h1>\n        } else {\n            return this.props.children\n        }\n        \n    }\n}\n\nexport default ErrorBoundary;","import React, { Component } from \"react\"\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from \"../components/Scroll\"\nimport ErrorBoundary from \"../components/ErrorBoundary\"\n// import { robots } from \"./robots\"\nimport './App.css'\n\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: \"\"\n        }\n    }\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value});\n        \n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then((response) => response.json())\n        .then(users => {this.setState({robots:users});});\n        \n    }\n\n    render() {\n        const { robots,searchfield } = this.state\n        let filteredRobots = robots.filter((robot) => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        });\n        return !robots.length ?\n        <h1>loading...</h1> :\n        (\n            <div className=\"tc\">\n                <h1>Robo Friends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList robots = {filteredRobots} />\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n        )\n    }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport \"tachyons\";\n// import Hello from './Hello';\nimport reportWebVitals from './reportWebVitals';\n// import { robots } from './robots';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App/>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}